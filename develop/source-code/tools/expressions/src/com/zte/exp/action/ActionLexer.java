// Generated from Action.g4 by ANTLR 4.1
package com.zte.exp.action;

import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.RuleContext;
import org.antlr.v4.runtime.atn.ATN;
import org.antlr.v4.runtime.atn.ATNSimulator;
import org.antlr.v4.runtime.atn.LexerATNSimulator;
import org.antlr.v4.runtime.atn.PredictionContextCache;
import org.antlr.v4.runtime.dfa.DFA;

@SuppressWarnings({ "all", "warnings", "unchecked", "unused", "cast" })
public class ActionLexer extends Lexer
{
    public static final int
            T__19 = 1, T__18 = 2, T__17 = 3, T__16 = 4, T__15 = 5, T__14 = 6, T__13 = 7, T__12 = 8,
            T__11 = 9, T__10 = 10, T__9 = 11, T__8 = 12, T__7 = 13, T__6 = 14, T__5 = 15, T__4 = 16,
            T__3 = 17, T__2 = 18, T__1 = 19, T__0 = 20, ALL = 21, SLASH = 22, LIKE = 23, MINUS = 24,
            ADD = 25, DIVID = 26, MULTI = 27, BAR = 28, AMPERSAND = 29, RIGHT = 30, LEFT = 31, HEX =
            32,
            STRING = 33, INT = 34, NOTEQUAL = 35, CONTAINS = 36, IN = 37, NOT = 38, OR = 39, AND =
            40,
            SMALLER = 41, BIGGER = 42, EQUAL = 43, SMALLEROREQUAL = 44, BIGGEROREQUAL = 45,
            TEXT = 46, WS = 47;
    public static final String[] tokenNames = {
            "<INVALID>",
            "'onSelect('", "']'", "')'", "'.'", "','", "'['", "'('", "':'", "'tree('",
            "'${'", "'false'", "'version('", "'mw.nr8250='", "'json('", "'ne('", "'select('",
            "'mw.nr8120='", "'commit('", "'}'", "'true'", "ALL", "SLASH", "LIKE",
            "'-'", "'+'", "DIVID", "'*'", "'|'", "'&'", "'>>'", "'<<'", "HEX", "STRING",
            "INT", "'!='", "'contains'", "IN", "NOT", "OR", "AND", "'<'", "'>'", "'='",
            "'<='", "'>='", "TEXT", "WS"
    };
    public static final String[] ruleNames = {
            "T__19", "T__18", "T__17", "T__16", "T__15", "T__14", "T__13", "T__12",
            "T__11", "T__10", "T__9", "T__8", "T__7", "T__6", "T__5", "T__4", "T__3",
            "T__2", "T__1", "T__0", "ALL", "SLASH", "LIKE", "MINUS", "ADD", "DIVID",
            "MULTI", "BAR", "AMPERSAND", "RIGHT", "LEFT", "HEX", "STRING", "INT",
            "NOTEQUAL", "CONTAINS", "IN", "NOT", "OR", "AND", "SMALLER", "BIGGER",
            "EQUAL", "SMALLEROREQUAL", "BIGGEROREQUAL", "TEXT", "WS"
    };
    public static final String _serializedATN =
            "\3\uacf5\uee8c\u4f5d\u8b0d\u4a45\u78bd\u1b2f\u3378\2\61\u0141\b\1\4\2" +
                    "\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4" +
                    "\13\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22" +
                    "\t\22\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31" +
                    "\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t" +
                    " \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t" +
                    "+\4,\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\3\2\3\2\3\2\3\2\3\2\3\2\3\2\3\2\3" +
                    "\2\3\2\3\3\3\3\3\4\3\4\3\5\3\5\3\6\3\6\3\7\3\7\3\b\3\b\3\t\3\t\3\n\3\n" +
                    "\3\n\3\n\3\n\3\n\3\13\3\13\3\13\3\f\3\f\3\f\3\f\3\f\3\f\3\r\3\r\3\r\3" +
                    "\r\3\r\3\r\3\r\3\r\3\r\3\16\3\16\3\16\3\16\3\16\3\16\3\16\3\16\3\16\3" +
                    "\16\3\16\3\17\3\17\3\17\3\17\3\17\3\17\3\20\3\20\3\20\3\20\3\21\3\21\3" +
                    "\21\3\21\3\21\3\21\3\21\3\21\3\22\3\22\3\22\3\22\3\22\3\22\3\22\3\22\3" +
                    "\22\3\22\3\22\3\23\3\23\3\23\3\23\3\23\3\23\3\23\3\23\3\24\3\24\3\25\3" +
                    "\25\3\25\3\25\3\25\3\26\3\26\6\26\u00cb\n\26\r\26\16\26\u00cc\3\26\3\26" +
                    "\3\27\3\27\3\30\3\30\3\30\3\30\3\30\3\30\3\30\3\30\5\30\u00db\n\30\3\31" +
                    "\3\31\3\32\3\32\3\33\3\33\3\34\3\34\3\35\3\35\3\36\3\36\3\37\3\37\3\37" +
                    "\3 \3 \3 \3!\3!\3!\3!\6!\u00f3\n!\r!\16!\u00f4\3\"\3\"\6\"\u00f9\n\"\r" +
                    "\"\16\"\u00fa\3\"\3\"\3#\6#\u0100\n#\r#\16#\u0101\3$\3$\3$\3%\3%\3%\3" +
                    "%\3%\3%\3%\3%\3%\3&\3&\3&\3&\5&\u0114\n&\3\'\3\'\3\'\3\'\5\'\u011a\n\'" +
                    "\3(\3(\3(\3(\5(\u0120\n(\3)\3)\3)\3)\3)\3)\5)\u0128\n)\3*\3*\3+\3+\3," +
                    "\3,\3-\3-\3-\3.\3.\3.\3/\6/\u0137\n/\r/\16/\u0138\3\60\6\60\u013c\n\60" +
                    "\r\60\16\60\u013d\3\60\3\60\2\61\3\3\1\5\4\1\7\5\1\t\6\1\13\7\1\r\b\1" +
                    "\17\t\1\21\n\1\23\13\1\25\f\1\27\r\1\31\16\1\33\17\1\35\20\1\37\21\1!" +
                    "\22\1#\23\1%\24\1\'\25\1)\26\1+\27\1-\30\1/\31\1\61\32\1\63\33\1\65\34" +
                    "\1\67\35\19\36\1;\37\1= \1?!\1A\"\1C#\1E$\1G%\1I&\1K\'\1M(\1O)\1Q*\1S" +
                    "+\1U,\1W-\1Y.\1[/\1]\60\1_\61\2\3\2\7\5\2\62;CHch\b\2\60\60\62;??C\\^" +
                    "^c|\3\2\62;\5\2\62;C\\c|\5\2\13\f\17\17\"\"\u014b\2\3\3\2\2\2\2\5\3\2" +
                    "\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3\2\2\2\2\21" +
                    "\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2\2\31\3\2\2\2\2\33\3\2" +
                    "\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2\2\2\2%\3\2\2\2\2\'\3" +
                    "\2\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2\2\2\2\63\3" +
                    "\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3\2\2\2\2=\3\2\2\2\2?\3" +
                    "\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2E\3\2\2\2\2G\3\2\2\2\2I\3\2\2\2\2K\3\2\2" +
                    "\2\2M\3\2\2\2\2O\3\2\2\2\2Q\3\2\2\2\2S\3\2\2\2\2U\3\2\2\2\2W\3\2\2\2\2" +
                    "Y\3\2\2\2\2[\3\2\2\2\2]\3\2\2\2\2_\3\2\2\2\3a\3\2\2\2\5k\3\2\2\2\7m\3" +
                    "\2\2\2\to\3\2\2\2\13q\3\2\2\2\rs\3\2\2\2\17u\3\2\2\2\21w\3\2\2\2\23y\3" +
                    "\2\2\2\25\177\3\2\2\2\27\u0082\3\2\2\2\31\u0088\3\2\2\2\33\u0091\3\2\2" +
                    "\2\35\u009c\3\2\2\2\37\u00a2\3\2\2\2!\u00a6\3\2\2\2#\u00ae\3\2\2\2%\u00b9" +
                    "\3\2\2\2\'\u00c1\3\2\2\2)\u00c3\3\2\2\2+\u00c8\3\2\2\2-\u00d0\3\2\2\2" +
                    "/\u00da\3\2\2\2\61\u00dc\3\2\2\2\63\u00de\3\2\2\2\65\u00e0\3\2\2\2\67" +
                    "\u00e2\3\2\2\29\u00e4\3\2\2\2;\u00e6\3\2\2\2=\u00e8\3\2\2\2?\u00eb\3\2" +
                    "\2\2A\u00ee\3\2\2\2C\u00f6\3\2\2\2E\u00ff\3\2\2\2G\u0103\3\2\2\2I\u0106" +
                    "\3\2\2\2K\u0113\3\2\2\2M\u0119\3\2\2\2O\u011f\3\2\2\2Q\u0127\3\2\2\2S" +
                    "\u0129\3\2\2\2U\u012b\3\2\2\2W\u012d\3\2\2\2Y\u012f\3\2\2\2[\u0132\3\2" +
                    "\2\2]\u0136\3\2\2\2_\u013b\3\2\2\2ab\7q\2\2bc\7p\2\2cd\7U\2\2de\7g\2\2" +
                    "ef\7n\2\2fg\7g\2\2gh\7e\2\2hi\7v\2\2ij\7*\2\2j\4\3\2\2\2kl\7_\2\2l\6\3" +
                    "\2\2\2mn\7+\2\2n\b\3\2\2\2op\7\60\2\2p\n\3\2\2\2qr\7.\2\2r\f\3\2\2\2s" +
                    "t\7]\2\2t\16\3\2\2\2uv\7*\2\2v\20\3\2\2\2wx\7<\2\2x\22\3\2\2\2yz\7v\2" +
                    "\2z{\7t\2\2{|\7g\2\2|}\7g\2\2}~\7*\2\2~\24\3\2\2\2\177\u0080\7&\2\2\u0080" +
                    "\u0081\7}\2\2\u0081\26\3\2\2\2\u0082\u0083\7h\2\2\u0083\u0084\7c\2\2\u0084" +
                    "\u0085\7n\2\2\u0085\u0086\7u\2\2\u0086\u0087\7g\2\2\u0087\30\3\2\2\2\u0088" +
                    "\u0089\7x\2\2\u0089\u008a\7g\2\2\u008a\u008b\7t\2\2\u008b\u008c\7u\2\2" +
                    "\u008c\u008d\7k\2\2\u008d\u008e\7q\2\2\u008e\u008f\7p\2\2\u008f\u0090" +
                    "\7*\2\2\u0090\32\3\2\2\2\u0091\u0092\7o\2\2\u0092\u0093\7y\2\2\u0093\u0094" +
                    "\7\60\2\2\u0094\u0095\7p\2\2\u0095\u0096\7t\2\2\u0096\u0097\7:\2\2\u0097" +
                    "\u0098\7\64\2\2\u0098\u0099\7\67\2\2\u0099\u009a\7\62\2\2\u009a\u009b" +
                    "\7?\2\2\u009b\34\3\2\2\2\u009c\u009d\7l\2\2\u009d\u009e\7u\2\2\u009e\u009f" +
                    "\7q\2\2\u009f\u00a0\7p\2\2\u00a0\u00a1\7*\2\2\u00a1\36\3\2\2\2\u00a2\u00a3" +
                    "\7p\2\2\u00a3\u00a4\7g\2\2\u00a4\u00a5\7*\2\2\u00a5 \3\2\2\2\u00a6\u00a7" +
                    "\7u\2\2\u00a7\u00a8\7g\2\2\u00a8\u00a9\7n\2\2\u00a9\u00aa\7g\2\2\u00aa" +
                    "\u00ab\7e\2\2\u00ab\u00ac\7v\2\2\u00ac\u00ad\7*\2\2\u00ad\"\3\2\2\2\u00ae" +
                    "\u00af\7o\2\2\u00af\u00b0\7y\2\2\u00b0\u00b1\7\60\2\2\u00b1\u00b2\7p\2" +
                    "\2\u00b2\u00b3\7t\2\2\u00b3\u00b4\7:\2\2\u00b4\u00b5\7\63\2\2\u00b5\u00b6" +
                    "\7\64\2\2\u00b6\u00b7\7\62\2\2\u00b7\u00b8\7?\2\2\u00b8$\3\2\2\2\u00b9" +
                    "\u00ba\7e\2\2\u00ba\u00bb\7q\2\2\u00bb\u00bc\7o\2\2\u00bc\u00bd\7o\2\2" +
                    "\u00bd\u00be\7k\2\2\u00be\u00bf\7v\2\2\u00bf\u00c0\7*\2\2\u00c0&\3\2\2" +
                    "\2\u00c1\u00c2\7\177\2\2\u00c2(\3\2\2\2\u00c3\u00c4\7v\2\2\u00c4\u00c5" +
                    "\7t\2\2\u00c5\u00c6\7w\2\2\u00c6\u00c7\7g\2\2\u00c7*\3\2\2\2\u00c8\u00ca" +
                    "\7}\2\2\u00c9\u00cb\13\2\2\2\u00ca\u00c9\3\2\2\2\u00cb\u00cc\3\2\2\2\u00cc" +
                    "\u00ca\3\2\2\2\u00cc\u00cd\3\2\2\2\u00cd\u00ce\3\2\2\2\u00ce\u00cf\7\177" +
                    "\2\2\u00cf,\3\2\2\2\u00d0\u00d1\7\61\2\2\u00d1.\3\2\2\2\u00d2\u00d3\7" +
                    "n\2\2\u00d3\u00d4\7k\2\2\u00d4\u00d5\7m\2\2\u00d5\u00db\7g\2\2\u00d6\u00d7" +
                    "\7N\2\2\u00d7\u00d8\7K\2\2\u00d8\u00d9\7M\2\2\u00d9\u00db\7G\2\2\u00da" +
                    "\u00d2\3\2\2\2\u00da\u00d6\3\2\2\2\u00db\60\3\2\2\2\u00dc\u00dd\7/\2\2" +
                    "\u00dd\62\3\2\2\2\u00de\u00df\7-\2\2\u00df\64\3\2\2\2\u00e0\u00e1\7\61" +
                    "\2\2\u00e1\66\3\2\2\2\u00e2\u00e3\7,\2\2\u00e38\3\2\2\2\u00e4\u00e5\7" +
                    "~\2\2\u00e5:\3\2\2\2\u00e6\u00e7\7(\2\2\u00e7<\3\2\2\2\u00e8\u00e9\7@" +
                    "\2\2\u00e9\u00ea\7@\2\2\u00ea>\3\2\2\2\u00eb\u00ec\7>\2\2\u00ec\u00ed" +
                    "\7>\2\2\u00ed@\3\2\2\2\u00ee\u00ef\7\62\2\2\u00ef\u00f0\7z\2\2\u00f0\u00f2" +
                    "\3\2\2\2\u00f1\u00f3\t\2\2\2\u00f2\u00f1\3\2\2\2\u00f3\u00f4\3\2\2\2\u00f4" +
                    "\u00f2\3\2\2\2\u00f4\u00f5\3\2\2\2\u00f5B\3\2\2\2\u00f6\u00f8\7)\2\2\u00f7" +
                    "\u00f9\t\3\2\2\u00f8\u00f7\3\2\2\2\u00f9\u00fa\3\2\2\2\u00fa\u00f8\3\2" +
                    "\2\2\u00fa\u00fb\3\2\2\2\u00fb\u00fc\3\2\2\2\u00fc\u00fd\7)\2\2\u00fd" +
                    "D\3\2\2\2\u00fe\u0100\t\4\2\2\u00ff\u00fe\3\2\2\2\u0100\u0101\3\2\2\2" +
                    "\u0101\u00ff\3\2\2\2\u0101\u0102\3\2\2\2\u0102F\3\2\2\2\u0103\u0104\7" +
                    "#\2\2\u0104\u0105\7?\2\2\u0105H\3\2\2\2\u0106\u0107\7e\2\2\u0107\u0108" +
                    "\7q\2\2\u0108\u0109\7p\2\2\u0109\u010a\7v\2\2\u010a\u010b\7c\2\2\u010b" +
                    "\u010c\7k\2\2\u010c\u010d\7p\2\2\u010d\u010e\7u\2\2\u010eJ\3\2\2\2\u010f" +
                    "\u0110\7k\2\2\u0110\u0114\7p\2\2\u0111\u0112\7K\2\2\u0112\u0114\7P\2\2" +
                    "\u0113\u010f\3\2\2\2\u0113\u0111\3\2\2\2\u0114L\3\2\2\2\u0115\u0116\7" +
                    "p\2\2\u0116\u0117\7q\2\2\u0117\u011a\7v\2\2\u0118\u011a\7#\2\2\u0119\u0115" +
                    "\3\2\2\2\u0119\u0118\3\2\2\2\u011aN\3\2\2\2\u011b\u011c\7q\2\2\u011c\u0120" +
                    "\7t\2\2\u011d\u011e\7Q\2\2\u011e\u0120\7T\2\2\u011f\u011b\3\2\2\2\u011f" +
                    "\u011d\3\2\2\2\u0120P\3\2\2\2\u0121\u0122\7c\2\2\u0122\u0123\7p\2\2\u0123" +
                    "\u0128\7f\2\2\u0124\u0125\7C\2\2\u0125\u0126\7P\2\2\u0126\u0128\7F\2\2" +
                    "\u0127\u0121\3\2\2\2\u0127\u0124\3\2\2\2\u0128R\3\2\2\2\u0129\u012a\7" +
                    ">\2\2\u012aT\3\2\2\2\u012b\u012c\7@\2\2\u012cV\3\2\2\2\u012d\u012e\7?" +
                    "\2\2\u012eX\3\2\2\2\u012f\u0130\7>\2\2\u0130\u0131\7?\2\2\u0131Z\3\2\2" +
                    "\2\u0132\u0133\7@\2\2\u0133\u0134\7?\2\2\u0134\\\3\2\2\2\u0135\u0137\t" +
                    "\5\2\2\u0136\u0135\3\2\2\2\u0137\u0138\3\2\2\2\u0138\u0136\3\2\2\2\u0138" +
                    "\u0139\3\2\2\2\u0139^\3\2\2\2\u013a\u013c\t\6\2\2\u013b\u013a\3\2\2\2" +
                    "\u013c\u013d\3\2\2\2\u013d\u013b\3\2\2\2\u013d\u013e\3\2\2\2\u013e\u013f" +
                    "\3\2\2\2\u013f\u0140\b\60\2\2\u0140`\3\2\2\2\16\2\u00cc\u00da\u00f4\u00fa" +
                    "\u0101\u0113\u0119\u011f\u0127\u0138\u013d";
    public static final ATN _ATN =
            ATNSimulator.deserialize(_serializedATN.toCharArray());

    protected static final DFA[] _decisionToDFA;
    static
    {
        _decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
        for (int i = 0; i < _ATN.getNumberOfDecisions(); i++)
        {
            _decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
        }
    }

    protected static final PredictionContextCache _sharedContextCache =
            new PredictionContextCache();
    public static String[] modeNames = {
            "DEFAULT_MODE"
    };

    public ActionLexer(CharStream input)
    {
        super(input);
        _interp = new LexerATNSimulator(this, _ATN, _decisionToDFA, _sharedContextCache);
    }

    @Override
    public String getGrammarFileName()
    {
        return "Action.g4";
    }

    @Override
    public String[] getTokenNames()
    {
        return tokenNames;
    }

    @Override
    public String[] getRuleNames()
    {
        return ruleNames;
    }

    @Override
    public String[] getModeNames()
    {
        return modeNames;
    }

    @Override
    public ATN getATN()
    {
        return _ATN;
    }

    @Override
    public void action(RuleContext _localctx, int ruleIndex, int actionIndex)
    {
        switch (ruleIndex)
        {
        case 46:
            WS_action((RuleContext) _localctx, actionIndex);
            break;
        }
    }

    private void WS_action(RuleContext _localctx, int actionIndex)
    {
        switch (actionIndex)
        {
        case 0:
            skip();
            break;
        }
    }
}